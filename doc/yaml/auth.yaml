openapi: 3.0.3
info:
  title: "Squealer Authentication"
  description: "Backend API for authentication"
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
tags:
- name: "Login"
- name: "Refresh"
- name: "Logout"

paths:
  /auth/login:
    post:
      tags:
        - Login
      description: login endpoint
      operationId: userLogin
      requestBody:
        description: user's mail and password
        required: True
        content:
          application/json:
            schema:
              type: object
              required: [ username, password ]
              properties:
                username:
                  type: string
                  example: UserA
                password:
                  type: string
                  format: password
                  minLength: 6
                  example: gTT33%2?
                rememberMe:
                  type: boolean
                  default: false
      responses:
        '200':
          description: Autenticazione effettuata.
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/TokenDetails"
        '401':
          description: Credenziali non valide.
        '403':
          description: Token expirated.

    
  /auth/refresh:
    post:
      tags:
      - "Refresh"
      description: "refresh token from tokens."
      operationId: refreshToken
      responses:
        '200':
          description: "Token rinnovati"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenDetails"
        '401':
          description: "Refresh token non valido"
        '500':
          description: "server-side error"

  /auth/logout:
    post:
      tags:
      - "Logout"
      description: user logout.
      operationId: userLogout
      responses:
        200:
          description: "User logout with success"
        204:
          description: "Refresh token invalidato"
        401:
          description: "Refresh token non valido"
        500:
          description: "server-side error"          

    

components:
  schemas:
    TokenDetails:
      type: object
      properties:
        token:
          type: string
          description: The JWT token
          format: byte
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        expiration:
          type: integer
          format: timestamp
      required: [ value, expiration ]